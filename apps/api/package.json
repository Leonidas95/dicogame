{
  "name": "api",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "dev": "nest start --watch --preserveWatchOutput",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,test}/**/*.ts\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^9.1.4",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.1.4",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.1.4",
    "@prisma/client": "^4.4.0",
    "bcrypt": "^5.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "joi": "^17.6.2",
    "nest-winston": "^1.7.0",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.5.7",
    "winston": "^3.8.2"
  },
  "devDependencies": {
    "@faker-js/faker": "^7.6.0",
    "@nestjs/cli": "^9.1.4",
    "@nestjs/schematics": "^9.0.3",
    "@nestjs/testing": "^9.1.4",
    "@types/bcrypt": "^5.0.0",
    "@types/express": "^4.17.14",
    "@types/jest": "^28.1.8",
    "@types/node": "^16.11.64",
    "@types/passport-jwt": "^3.0.7",
    "@types/supertest": "^2.0.12",
    "config": "workspace:*",
    "eslint": "^8.27.0",
    "jest": "^28.1.3",
    "prisma": "^4.4.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.0",
    "ts-jest": "^28.0.8",
    "ts-loader": "^9.4.1",
    "ts-node": "^10.9.1",
    "tsconfig": "workspace:*",
    "tsconfig-paths": "^4.1.0",
    "typescript": "^4.8.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  }
}
